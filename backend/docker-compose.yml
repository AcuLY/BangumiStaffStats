services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: bgmss-backend:latest
    restart: unless-stopped
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB=${MYSQL_DATABASE}
      - REDIS_ADDR=redis:${REDIS_PORT}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config

  loader:
    build:
      context: .
      dockerfile: Dockerfile.loader
    image: bgmss-loader:latest
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./static:/static
      - ./config:/config
      - ./scripts:/scripts

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD --database=$$MYSQL_DATABASE -e 'SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-sql:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"

  redis:
    image: redis:7.2
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1024mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:6379"

volumes:
  mysql_data:
  redis_data:
